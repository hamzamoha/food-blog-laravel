class MyUploadAdapter{constructor(e){this.loader=e}upload(){return this.loader.file.then(e=>new Promise((t,r)=>{this._initRequest(),this._initListeners(t,r,e),this._sendRequest(e)}))}abort(){this.xhr&&this.xhr.abort()}_initRequest(){let e=this.xhr=new XMLHttpRequest;e.open("POST","/api/ckeditor/upload",!0),e.setRequestHeader("x-csrf-token",document.querySelector('meta[name="csrf-token"]').getAttribute("content")),e.responseType="json"}_initListeners(e,t,r){let s=this.xhr,o=this.loader,n=`Couldn't upload file: ${r.name}.`;s.addEventListener("error",()=>t(n)),s.addEventListener("abort",()=>t()),s.addEventListener("load",()=>{let r=s.response;if(!r||r.error)return t(r&&r.error?r.error.message:n);e({default:r.url})}),s.upload&&s.upload.addEventListener("progress",e=>{e.lengthComputable&&(o.uploadTotal=e.total,o.uploaded=e.loaded)})}_sendRequest(e){let t=new FormData;t.append("upload",e),this.xhr.send(t)}}export default function e(e){e.plugins.get("FileRepository").createUploadAdapter=e=>new MyUploadAdapter(e)};